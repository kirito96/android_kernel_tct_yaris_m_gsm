#!/usr/bin/python
#
# This script is used for NFC mode exchange by build options
# If the JRD_NFC_SUPPORT=yes , mediatek/config/$project/ProjectConfig.mk
# will be modified into support NFC function And if JRD_NFC_SUPPORT=no it will
# change to not support NFC function
# 
#autor by yanqi.liu@tcl.com

import os
import re
import sys

###update here if you update your's project name
projectConfigFullName = '../../mediatek/config/pixi3_45/ProjectConfig.mk'

def simModeExchange(sdFlag):
	if sdFlag == 'yes':
		print "******Start to build dual sim version********\n"
		os.system("sed '/Support dual SIM Card UI or not/{n;s/<VALUE>\"false\"<\/VALUE>/<VALUE>\"true\"<\/VALUE>/}' -i ../../*_wimdata_ng/wprocedures/jrdsh/isdm_sys_properties.plf")
	elif sdFlag == 'no':
		print "******Start to build single sim version******\n"
		os.system("sed '/Support dual SIM Card UI or not/{n;s/<VALUE>\"true\"<\/VALUE>/<VALUE>\"false\"<\/VALUE>/}' -i ../../*_wimdata_ng/wprocedures/jrdsh/isdm_sys_properties.plf")
	print "  Start to change sim mode: \n   => 'yes' for dual sim mode. \n   => 'no' for single sim mode.\n   => Input flag sdFlag=%s \n" %sdFlag

def CAM5MPSwitch(sdflag,project):
		print "  Start to change actual 5MP Support: \n   => 'yes' for Pixi3-4 US1-1S-5M branch. \n   => 'no' for other US1-1S branch.\n  => Input flag sdflag=%s \n" %sdflag
		if sdflag == 'yes':
			print "sed -i 's/JRD_CAM_ACTUAL_5MP_SUPPORT=yes for US1-1S-5M branch"
			os.system("sed -i \'/^JRD_CAM_ACTUAL_5MP_SUPPORT/c\\JRD_CAM_ACTUAL_5MP_SUPPORT=yes\' " + projectConfigFullName )
		else:
			print "sed -i 's/JRD_CAM_ACTUAL_5MP_SUPPORT=no for other US1-1S branch (SW 8MP)"
			os.system("sed -i \'/^JRD_CAM_ACTUAL_5MP_SUPPORT/c\\JRD_CAM_ACTUAL_5MP_SUPPORT=no\' " + projectConfigFullName )	
		print "******change actual 5MP Support end**********************"

def SUBCAM2MPSwitch(sdflag,project):
		print "  Start to change Sub cam 2MP Support: \n   => 'yes' for Pixi3-45 US-2S-1G branch. \n   => 'no' for other branch.\n  => Input flag sdflag=%s \n" %sdflag
		if sdflag == 'yes':
			print "sed -i 's/JRD_SUBCAM_2MP_SUPPORT=yes for Pixi3-45 US-2S-1G branch"
			os.system("sed -i \'/^JRD_SUBCAM_2MP_SUPPORT/c\\JRD_SUBCAM_2MP_SUPPORT=yes\' " + projectConfigFullName )
		else:
			print "sed -i 's/JRD_SUBCAM_2MP_SUPPORT=no for other branch"
			os.system("sed -i \'/^JRD_SUBCAM_2MP_SUPPORT/c\\JRD_SUBCAM_2MP_SUPPORT=no\' " + projectConfigFullName )	
		print "******change SUB  5MP Support end**********************"


def ModemBand(sdflag,project):
	print "  Start to change Modem Band: \n   => 'EU' for support EU. \n   => 'US0' for support US0.\n   => 'US1' for support US1.\n   => 'US3' for support US3.\n  => Input flag sdflag=%s \n" %sdflag
	Flag = 0
	prjConf = []
	for line in open("../../mtk6572_wimdata_ng/wprocedures/jrdsh/isdm_sys_makefile.plf","r").readlines():
		if line.startswith('<SDMID>'):
			SMNID = re.match('<SDMID>(.+)</SDMID>', line).group(1)
			if (SMNID == "MODEM_IMG"):
				Flag = 1
			prjConf.append(line)
		elif line.startswith('<VALUE>'):
				appendline = ""
 				if (Flag == 1):
					appendline = '<VALUE>"%s"</VALUE>\n'%sdflag
					Flag = 0
					prjConf.append(appendline)
				else:
					prjConf.append(line)
		else:
			prjConf.append(line)

	prjconfWrite = open("../../mtk6572_wimdata_ng/wprocedures/jrdsh/isdm_sys_makefile.plf", "w")
	for line in prjConf:
		prjconfWrite.write(line)
	prjconfWrite.close()
#BEGIN: add by xiaopu.zhu for dual mic support on EU band.
#	Flag = 0
#	prjConf = []
#	for line in open("../../mtk6572_wimdata_ng/wprocedures/pixi3_45/isdm_sys_properties.plf","r").readlines():
#		if line.startswith('<SDMID>'):
#			SMNID = re.match('<SDMID>(.+)</SDMID>', line).group(1)
#			if (SMNID == "ro.config.dualmic.support"):
#				Flag = 1
#			prjConf.append(line)
#		elif line.startswith('<VALUE>'):
#				appendline = ""
#				if (Flag == 1):
#					if(sdflag == 'EU'):
#						appendline = '<VALUE>1</VALUE>\n'
#				        else:
#						appendline = '<VALUE>0</VALUE>\n'
#					Flag = 0
#					prjConf.append(appendline)
#				else:
#					prjConf.append(line)
#		else:
#			prjConf.append(line)
#
#	prjconfWrite = open("../../mtk6572_wimdata_ng/wprocedures/pixi3_45/isdm_sys_properties.plf", "w")
#	for line in prjConf:
#		prjconfWrite.write(line)
#	prjconfWrite.close()
#END: add by xiaopu.zhu for dual mic support on EU band.
	print "******Change Modem Band end**********************"

	#BEGIN: add by fangjie,because only the EU version has the real ALSPS.
	#if sdFlag == 'EU':
	#	os.system("sed -i \'/^CTP_PSENSOR_SUPPORT/c\\CTP_PSENSOR_SUPPORT=no\' " + projectConfigFullName)
	#	print "******Band = EU, Set CTP_PSENSOR_SUPPORT=no**********************"
	#END: add by fangjie,because only the EU version has the real ALSPS.
#modify by xiaopu.zhu for pixi3_45 A/DTV
def ADTVSwitch(sdflag,project):
	print "  Start to change TV Support: \n   => 'ATV' for support atv function. \n   => 'DTV' for support dtv function.\n  => Input flag sdflag=%s \n" %sdflag
	Flag = 0
        FlagP = 0
	prjConf = []
	for line in open("../../mtk6572_wimdata_ng/wprocedures/pixi3_45/isdm_sys_makefile.plf","r").readlines():
		if line.startswith('<SDMID>'):
			SMNID = re.match('<SDMID>(.+)</SDMID>', line).group(1)
			if (SMNID == "ADTV_SUPPORT"):
				Flag = 1
			else:
				Flag = 0
			prjConf.append(line)
		elif line.startswith('<VALUE>'):
			appendline = ""
			if (Flag == 1):
				appendline = '<VALUE>"%s"</VALUE>\n'%sdflag
				Flag = 0
				prjConf.append(appendline)
			else:
				prjConf.append(line)
		else:
			prjConf.append(line)

	prjconfWrite = open("../../mtk6572_wimdata_ng/wprocedures/pixi3_45/isdm_sys_makefile.plf", "w")
	for line in prjConf:
		prjconfWrite.write(line)
	prjconfWrite.close()
        
	print "  Start to change mini tv Support: \n => Input flag sdflag=%s \n" %sdflag
	Flagt = 0
	prjConf = []
	for line in open("../../mtk6572_wimdata_ng/wprocedures/pixi3_45/isdm_sys_properties.plf","r").readlines():
		if line.startswith('<SDMID>'):
			SMNID = re.match('<SDMID>(.+)</SDMID>', line).group(1)
			if (SMNID == "ro.mini.tv"):
				Flagt = 1
			prjConf.append(line)
		elif line.startswith('<VALUE>'):
				appendline = ""
				if (Flagt == 1):
					appendline = '<VALUE>"%s"</VALUE>\n'%sdflag
					Flagt = 0
					prjConf.append(appendline)
				else:
					prjConf.append(line)
		else:
			prjConf.append(line)

	prjconfWrite = open("../../mtk6572_wimdata_ng/wprocedures/pixi3_45/isdm_sys_properties.plf", "w")
	for line in prjConf:
		prjconfWrite.write(line)
	prjconfWrite.close()
#BEGIN: add by xiaopu.zhu HAVE/NO TV .
#	if sdflag == 'NONE':
#		os.system("sed -i \'/^HAVE_MATV_FEATURE/c\\HAVE_MATV_FEATURE= \' " + projectConfigFullName)
#		print "******HAVE_MATV_FEATURE=no**********************"
#		os.system("sed -i \'/^CUSTOM_HAL_MATV/c\\CUSTOM_HAL_MATV= \' " + projectConfigFullName)
#		print "******CUSTOM_HAL_MATV**********************"
#		os.system("sed -i \'/^CUSTOM_KERNEL_MATV/c\\CUSTOM_KERNEL_MATV= \' " + projectConfigFullName)
#		print "******CUSTOM_KERNEL_MATV=no**********************"
#		os.system("sed -i \'/^MTK_ATV_CHIP/c\\MTK_ATV_CHIP= \' " + projectConfigFullName)
#		print "******MTK_ATV_CHIP=no**********************"
#	else:
#		os.system("sed -i \'/^HAVE_MATV_FEATURE/c\\HAVE_MATV_FEATURE=yes\' " + projectConfigFullName)
#		print "******HAVE_MATV_FEATURE**********************"
#		os.system("sed -i \'/^CUSTOM_HAL_MATV/c\\CUSTOM_HAL_MATV=matv\' " + projectConfigFullName)
#		print "******CUSTOM_HAL_MATV**********************"
#		os.system("sed -i \'/^CUSTOM_KERNEL_MATV/c\\CUSTOM_KERNEL_MATV=nmi5625\' " + projectConfigFullName)
#		print "******CUSTOM_KERNEL_MATV=nmi5625**********************"
#		os.system("sed -i \'/^MTK_ATV_CHIP/c\\MTK_ATV_CHIP=NMI5625\' " + projectConfigFullName)
#	print "******MTK_ATV_CHIP=NMI5625**********************"
#END: add by xiaopu.zhu HAVE/NO TV .
print "******Change TV Support end**********************"

def ClkSupport(sdflag,project):
	if project == 'pixi3_45':
		print "  Start to change CLK Support: \n   => 'yes' for hal have CLK. \n   => 'no' for hal have not CLK.\n  => Input flag sdflag=%s \n" %sdflag
		Flag = 0
		prjConf = []
		for line in open("../../mtk6572_wimdata_ng/wprocedures/pixi3_45/isdm_sys_makefile.plf","r").readlines():
			if line.startswith('<SDMID>'):
				SMNID = re.match('<SDMID>(.+)</SDMID>', line).group(1)
				if (SMNID == "HAL_SUPPORT_CLK"):
					Flag = 1
				prjConf.append(line)
			elif line.startswith('<VALUE>'):
					appendline = ""
 					if (Flag == 1):
						appendline = '<VALUE>"%s"</VALUE>\n'%sdflag
						Flag = 0
						prjConf.append(appendline)
					else:
						prjConf.append(line)
			else:
				prjConf.append(line)

		prjconfWrite = open("../../mtk6572_wimdata_ng/wprocedures/pixi3_45/isdm_sys_makefile.plf", "w")
		for line in prjConf:
			prjconfWrite.write(line)
		prjconfWrite.close()
		if sdflag == 'yes':
			print "sed -i 's/co_clock_flag=1/co_clock_flag=0/g' ../custom/pixi3_45/hal/ant/mt6582_ant_m1/WMT_SOC.cfg"
			os.system("sed -i 's/co_clock_flag=1/co_clock_flag=0/g' ../custom/pixi3_45/hal/ant/mt6582_ant_m1/WMT_SOC.cfg")
			print "sed -i 's/JRD_HAL_ANT_CLK_SUPPORT=no/JRD_HAL_ANT_CLK_SUPPORT=yes/g' ../config/pixi3_45/ProjectConfig.mk"
			os.system("sed -i 's/JRD_HAL_ANT_CLK_SUPPORT=no/JRD_HAL_ANT_CLK_SUPPORT=yes/g' ../config/pixi3_45/ProjectConfig.mk")
		else:
			print "sed -i 's/co_clock_flag=0/co_clock_flag=1/g' ../custom/pixi3_45/hal/ant/mt6582_ant_m1/WMT_SOC.cfg"
			os.system("sed -i 's/co_clock_flag=0/co_clock_flag=1/g' ../custom/pixi3_45/hal/ant/mt6582_ant_m1/WMT_SOC.cfg")
			print "sed -i 's/JRD_HAL_ANT_CLK_SUPPORT=yes/JRD_HAL_ANT_CLK_SUPPORT=no/g' ../config/pixi3_45/ProjectConfig.mk"
			os.system("sed -i 's/JRD_HAL_ANT_CLK_SUPPORT=yes/JRD_HAL_ANT_CLK_SUPPORT=no/g' ../config/pixi3_45/ProjectConfig.mk")
		print "******Change CLK Support end**********************"
#modify by xiaopu.zhu for pixi3_45 
def SSVSwitch():
	Flag = 0
	for line in open("../../mtk6572_wimdata_ng/wprocedures/jrdsh/isdm_sys_properties.plf","r").readlines():
		if line.startswith('<SDMID>'):
			SMNID = re.match('<SDMID>\s*(.+)\s*</SDMID>', line).group(1)
			if (SMNID == "ro.ssv.enabled"):
				Flag = 1
		elif line.startswith('<VALUE>'):
				if (Flag == 1):
					Flag = 0
					SVALUE = re.match('<VALUE>\s*"(.+)"\s*</VALUE>', line).group(1)
					if (SVALUE != "false"):
						os.system("touch ../../device/jrdcom/common/jrdssv.mk")
						os.system("echo 'TARGET_BUILD_SSV :=true\n' > ../../device/jrdcom/common/jrdssv.mk")
						os.system("echo 'JRD_PRODUCT_PACKAGES += JrdSsv\n' >> ../../device/jrdcom/common/jrdssv.mk")
					else:
 						os.system("touch ../../device/jrdcom/common/jrdssv.mk")
						os.system("echo 'TARGET_BUILD_SSV=false\n' > ../../device/jrdcom/common/jrdssv.mk")
	Flag = 0
	for line in open("../../mtk6572_wimdata_ng/wprocedures/pixi3_45/isdm_sys_properties.plf","r").readlines():
		if line.startswith('<SDMID>'):
			SMNID = re.match('<SDMID>\s*(.+)\s*</SDMID>', line).group(1)
			if (SMNID == "ro.ssv.enabled"):
				Flag = 1
		elif line.startswith('<VALUE>'):
				if (Flag == 1):
					Flag = 0
					SVALUE = re.match('<VALUE>\s*"(.+)"\s*</VALUE>', line).group(1)
					if (SVALUE != "false"):
						os.system("touch ../../device/jrdcom/common/jrdssv.mk")
						os.system("echo 'TARGET_BUILD_SSV :=true\n' > ../../device/jrdcom/common/jrdssv.mk")
						os.system("echo 'JRD_PRODUCT_PACKAGES += JrdSsv\n' >> ../../device/jrdcom/common/jrdssv.mk")
					else:
 						os.system("touch ../../device/jrdcom/common/jrdssv.mk")
						os.system("echo 'TARGET_BUILD_SSV=false\n' > ../../device/jrdcom/common/jrdssv.mk")

if __name__ == "__main__":
	if len(sys.argv) < 4:
		exit(0)
	sdflag = sys.argv[1]
	featureflag = sys.argv[2]
	project = sys.argv[3]
		


